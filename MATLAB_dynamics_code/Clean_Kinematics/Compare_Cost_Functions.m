clc
clear
%Load all of the relevant variables from a run

set(groot, 'DefaultFigureColor', 'White' ...
 ...     ,'DefaultFigurePaperType', 'a4letter' ...
 ...     ,'DefaultAxesColor', 'white' ...
 ...     ,'DefaultAxesDrawmode', 'fast' ...
     ,'DefaultAxesFontUnits', 'points' ...
     ,'DefaultAxesFontSize', 12 ...
 ...     ,'DefaultAxesFontAngle', 'Italic' ...
     ,'DefaultAxesFontName', 'Myriad Pro' ...
 ...     ,'DefaultAxesGridLineStyle', ':' ...
 ...     ,'DefaultAxesInterruptible', 'on' ...
 ...     ,'DefaultAxesLayer', 'Bottom' ...
 ...     ,'DefaultAxesNextPlot', 'replace' ...
 ...     ,'DefaultAxesUnits', 'normalized' ...
 ...     ,'DefaultAxesXcolor', [0, 0, 0] ...
 ...     ,'DefaultAxesYcolor', [0, 0, 0] ...
 ...     ,'DefaultAxesZcolor', [0, 0, 0] ...
 ...     ,'DefaultAxesVisible', 'on' ...
 ...     ,'DefaultLineColor', 'Red' ...
 ...     ,'DefaultLineLineStyle', '-' ...
     ,'DefaultLineLineWidth', 1 ...
 ...     ,'DefaultLineMarker', 'none' ...
     ,'DefaultLineMarkerSize', 8 ...
    ,'DefaultTextColor', [0, 0, 0] ...
    ,'DefaultTextFontUnits', 'Points' ...
    ,'DefaultTextFontSize', 9 ...
    ,'DefaultTextFontName', 'Myriad Pro' ...
 ...     ,'DefaultTextVerticalAlignment', 'middle' ...
 ...     ,'DefaultTextHorizontalAlignment', 'left' ...
 ...   ,'defaulttextinterpreter','latex' ...
    ,'DefaultLegendFontUnits', 'points' ...
    ,'DefaultLegendFontSize',11 ...
    ,'DefaultLegendFontName','Myriad Pro' ...   
);

load('Params_All_Form.mat')
view_vec=[8 15]

%%
subplot 131
load('J_form.mat');
%Plot the Resulting Stuff
x_com=M_Mat*y_tot';
Plot_Edges(Edges_All, x_all,'o-g')  %All of the Required Edges
hold on
plot3(x_com(1,:),x_com(2,:),x_com(3,:),'r')

x_end=reshape(y_tot(end,:),n_all,3)
Plot_Edges(Edges_All, x_end,'o-b')
for i=1:6  %Also Show the Motion of the kinematic nodes
    plot3(y_tot(:,i),y_tot(:,i+n_all),y_tot(:,i+2*n_all),'color',[.1 .1 .1])
end
axis equal
title('Formation Control')
view(view_vec)

subplot 132
load('J_theta')

%Plot the Resulting Stuff
x_com=M_Mat*y_tot';
Plot_Edges(Edges_All, x_all,'o-g')  %All of the Required Edges
hold on
plot3(x_com(1,:),x_com(2,:),x_com(3,:),'r')

x_end=reshape(y_tot(end,:),n_all,3)
Plot_Edges(Edges_All, x_end,'o-b')
for i=1:6  %Also Show the Motion of the kinematic nodes
    plot3(y_tot(:,i),y_tot(:,i+n_all),y_tot(:,i+2*n_all),'color',[.1 .1 .1])
end
axis equal
title('Roller Minimum')
view(view_vec)

subplot 133
load('J_Ldot.mat')

%Plot the Resulting Stuff
x_com=M_Mat*y_tot';
Plot_Edges(Edges_All, x_all,'o-g')  %All of the Required Edges
hold on
plot3(x_com(1,:),x_com(2,:),x_com(3,:),'r')

x_end=reshape(y_tot(end,:),n_all,3)
Plot_Edges(Edges_All, x_end,'o-b')
for i=1:6  %Also Show the Motion of the kinematic nodes
    plot3(y_tot(:,i),y_tot(:,i+n_all),y_tot(:,i+2*n_all),'color',[.1 .1 .1])
end
axis equal
title('Minimum Edge Change Control')
view(view_vec)

